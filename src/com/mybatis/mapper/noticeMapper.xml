<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis.mapper.noticeMapper">
<!-- second cache 사용하는부분! 기본값은 false-->
<cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true"/>
<!--리스트 ajax로 부르는 부분--> <!-- <는 &lt; >는 &gt; 특수문자로 변경해줘야함! <![CDATA[]]> 설정시괜찮음  -->
<!--받는부분은 List로 받는데 여기서 result를 지정할땐 데이터타입으로 줘야함  -->
<select id="getAllNoticeList" resultType="NoticeDTO">
	<![CDATA[
		select * from (select * from noticebbs order by bbsdate desc) where rownum <=10
	]]>
</select>
<!--리스트-->
<select id="getNoticeList" parameterType="int" resultType="NoticeDTO">
		select * from (select rownum num, N.* from(select * from noticebbs order by bbsdate desc) N) WHERE NUM BETWEEN ((#{pageNumber}-1)*10)+1 AND #{pageNumber}*10
</select>
<!--정렬때 사용되는 리스트-->
<select id="getNoticeListdesc" parameterType="java.util.HashMap" resultType="NoticeDTO">
	<!--sort값이 없을경우 기본리스트  -->
	<if test='sort =="" and sort !=null'>
			select * from (select rownum num, N.* from(select * from noticebbs order by bbsdate desc) N) WHERE NUM BETWEEN ((#{pageNumber}-1)*10)+1 AND #{pageNumber}*10
	</if>
	<!--있을경우 다른리스트-->
	<if test='sort !=""'>
		select * from (select rownum num, N.* from(select * from noticebbs order by
		<choose>
			<when test='sort.equals("titleDesc")'>bbsTitle desc</when>
			<when test='sort.equals("titleAsc")'>bbsTitle asc</when>
			<when test='sort.equals("numDesc")'>bbsid desc</when>
			<when test='sort.equals("numAsc")'>bbsid asc</when>
			<when test='sort.equals("adminDesc")'>bbsadminid desc</when>
			<when test='sort.equals("adminAsc")'>bbsadminid asc</when>
			<when test='sort.equals("ndateDesc")'>bbsdate desc</when>
			<when test='sort.equals("ndateAsc")'>bbsdate asc</when>
			<when test='sort.equals("nhitDesc")'>bbshit desc</when>
			<when test='sort.equals("nhitAsc")'>bbshit asc</when>
		</choose>
		) N) WHERE NUM BETWEEN ((#{pageNumber}-1)*10)+1 AND #{pageNumber}*10
	</if>
</select>
<!-- 공지사항 상세보기 --> 
<select id="getNoticeById" resultType="NoticeDTO">
	select * from noticebbs where bbsId=#{bbsId}
</select>
<!--다음글 조회  -->
<select id="getNextBbs" resultType="NoticeDTO">
	<!--xml문법으로 parse안하게 만드는부분(특수문자)-->
	<![CDATA[
	select bbsid,bbstitle from noticebbs where bbsid = (select bbsid from noticebbs where bbsdate > (select bbsdate from noticebbs where bbsid=#{bbsId}) and rownum =1)
	]]>
</select>
<!--이전글 조회  -->
<select id="getPrevBbs" resultType="NoticeDTO">
	<![CDATA[
	select bbsid,bbsTitle from (select * from noticebbs order by bbsdate desc) where bbsdate < (select bbsdate from noticebbs where bbsid=#{bbsId}) and rownum=1
	]]>
</select>
<select id="getNoticeCount" resultType="int">
	select count(bbsid) from noticebbs
</select>
<!--조회수 1증가  -->
<update id="noiceIncreaseHit">
	update noticebbs set bbshit = bbshit+1 where bbsid=#{bbsId}
</update>
<!--notice삭제-->
<delete id="deleteNoticeById">
	delete from noticebbs where bbsid=#{bbsId}
</delete>
<!--notice insert-->
<insert id="insertNotice" parameterType="NoticeDTO">
	insert into noticebbs values(notice_seq.nextval,#{bbsTitle},#{bbsContent},sysdate,#{bbsAdminId},0,1)
</insert>


</mapper>